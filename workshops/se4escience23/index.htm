<head>
	<meta name="author" content="Jeffrey Carver" />
	<meta http-equiv="content-type" content="text/html;charset=iso-8859-2" />
	<link rel="stylesheet" href="../images/conf-style.css" type="text/css" />
	<title>SE4eScience'23</title>

	<style type="text/css">
.style1 {
	text-align: right;
}
	.auto-style1 {
		font-family: Arial, Sans-Serif;
		font-weight: bold;
		font-size: 18px;
		letter-spacing: 1px;
	}
	</style>

	</head>
<body>
	<div class="content">
		<div class="header_top"></div>
		<div class="header">
			<div class="header_text">
				<span class="auto-style1">2023 International Workshop on Software Engineering for eScience</span>
				<h2>October 9-13, 2023</h2>
				<h2>Held in Conjuntion with <a href="https://www.escience-conference.org/2023/" target ="_blank">The 2023 IEEE International Conference on eScience</a><br></h2>
				<h2>Limassol, Cyprus<br><br></h2>
				<h2>Home&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					<a href="cfp.htm"><font color="yellow">Call for Papers</font></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					<a href="committee.htm"><font color="yellow">Committee</font></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					<a href="schedule.htm"><font color="yellow">Schedule</font></a>
        	</div>
		</div>
		<div class="left">
		<div class="article">

<h3>Overview</h3>


This is a time of great growth at the intersection of software engineering and eScience, increasingly manifested in the emerging discipline of Research Software Engineering (RSE or RSEng). There is a need for members of these communities to share experiences, identify problems, and enumerate common goals to form the basis for an ongoing research agenda. Such an agenda will enable more people to develop sound software development practice that leads to innovation in computationally-intensive or data-intensive research methods. The sharing and adoption of robust, reproducible and reusable software is a key foundation for democratizing eScience.

The workshop goal is to provide a unique venue for the presentation of results and to
facilitate interaction between software engineers and computational scientists, including
those from the humanities, social sciences and engineering. To address this goal, we seek
contributions from members of those communities that describe perspectives, research
outcomes, and lessons learned (positive or negative) from the development of eScience
software.

Specifically, we are interested in the software development and software engineering
challenges and enablers relating to the following topics.
<ol>
<li> eScience software applications that solve complex software- or data-intensive research problems, from large parallel
models/simulations of the physical world using HPC systems to smaller scale simulations
developed by a single researcher on a desktop machine or a small cluster.
<li> Applications that support scientific research and experiments at scale. Such applications include, but are
not limited to, systems for managing and/or manipulating large amounts of data and systems
that provide infrastructure for scientific or engineering applications such as libraries or
HPC/Cloud software.
<li> The process for building, reusing, and publishing software and data
used in scientific experiments or engineering innovations. Among others, these processes
include agile approaches, open source/open data issues, testing scientific software, and
managing software or data repositories for publishing goals.
<li> The process of theory-software translation, where loss or errors may occur due to challenges mapping
between scientific theory and its representation in code, or between the outputs of
computational research and its representation in theory.
<li> The collaboration and team science required to build effective e-Science projects, including experience from
communities of practice enabling, creation, sharing and adoption of software engineering
practice in a research field.
</ol>

Despite its importance, scientific software development has historically attracted less attention from the SE community than other subdomains have. Indeed, research software development is significantly different from the development of business information systems, from which many of the SE best practices, tools, and techniques have been drawn.
Rather than drawing on each others' experiences, the two communities can often seem in conflict. Additionally, most published SE studies focus on industry or open-source software projects rather than scientific software projects. As a result, SE research is often seen as unhelpful or useless to those developing scientific software, or indeed software in general, which is detrimental to the long-term production of reliable, reproducible, reusable and sustainable scientific software.
<br><br>

In addition, there are increasing concerns regarding the fragility of these scientific software systems, which operate in a highly connected ecosystem with emergent properties, whose inter-dependencies can cause cascading failures. Despite the emergence of clear and systematic SE approaches, the design and development of high-quality, sustainable software systems are still extremely challenging for software engineers involved in their design, development, and maintenance. As a result, the topic of software sustainability has also emerged as an important area of research in several fields within the subject area of computing, including SE, requirements engineering, and human-computer interaction. The importance of sustainability and software as a growth research area has been further underlined by long-term funding initiatives from the NSF (USA) and the EPSRC (UK). However, even though the importance of sustainability is increasingly recognized, many scientific software codebases and systems are highly unsustainable. Despite increasing recognition in the field of SE, it remains difficult to assess the delayed systemic effects of decisions taken in system design leading to code smells, sustainability debt, and brittleness, which ultimately results in software decay and death.
<br><br>

Thus the motivation for this workshop is (1) to bring the communities together, (2) to jointly work on research that provides examples of high-quality research and datasets to improve practice in the
field, and (3) to identify appropriate educational topics for current and future scientific software developers that will help best practices become embedded.

<h3>Goals</h3>
Most venues are either SE-focused or domain-focused (i.e. computational chemistry or computational hydrology) and rarely provide opportunities to publish results for unique SE challenges that scientific software developers face. Our goals are to:
<ul>
    <li> Provide a venue for members of the SE and research software communities to discuss issues of common interest.</li>
    <li> Identify aspects of SE that should be considered for research software education programs.</li>
    <li> Identify key areas of study where participants agree there is a lack of existing data or studies.</li>
    <li> Support the building of a common research agenda to address the complex software development issues typical of research software.</li>
    <li> Provide a venue for sharing early work and work-in-progress to obtain feedback from the wider community.</li>
</ul>

In addition to the informal interactions among the participants, the workshop will produce concrete outcomes ranging from the commissioning of new collaborative studies arising from the discussions and the publication of opinion/position papers in more public venues.
<br><br>
<hr>
<em>Last Updated on March 14, 2023 by Jeffrey Carver</em></div>
		</div>
		<div class="header_bottom"></div>
		<div class="footer">
		  <p><a href="http://www.ua.edu">University of Alabama </a> | <a href="http://www.eng.ua.edu/">College of Engineering </a> | <a href="http://cs.ua.edu/">Department of Computer Science</a><br>
  &copy; Copyright 2023 University of Alabama <a href="http://www.ua.edu"></a></p>
		</div>
	</div>
</body>
</html>
